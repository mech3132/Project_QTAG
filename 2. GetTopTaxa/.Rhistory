setwd("C:/Users/Alexander/OneDrive - The University Of British Columbia/BIOL 403/Clean Code")
setwd("C:/Users/Alexander/OneDrive - The University Of British Columbia/BIOL 403/Clean Code")
## tell R where to get the files
setwd("~/1.Input")
filepath = "~/2.Input"
##### WORKSPACE SETUP #####
library(phyloseq)
library(tidyverse)
library(vegan)
library(ranacapa)
#for merging
library(speedyseq)
library(janitor)
## read in files
df1 = readRDS("hu_salinity_16S_unfiltered.RDS")
setwd("C:/Users/Alexander/OneDrive - The University Of British Columbia/BIOL 403/Clean Code")
filepath = "C:/Users/Alexander/OneDrive - The University Of British Columbia/BIOL 403/Clean Code/2.Input"
## read in files
df1 = readRDS("hu_salinity_16S_unfiltered.RDS")
##### WORKSPACE SETUP #####
library(phyloseq)
library(tidyverse)
library(vegan)
library(ranacapa)
library(stats)
#for merging
library(speedyseq)
library(janitor)
setwd("C:/Users/Alexander/OneDrive - The University Of British Columbia/BIOL 403/Clean Code/1. FilteringMergingAddingDescription")
## read in files
df1 = readRDS("hu_salinity_16S_unfiltered.RDS")
df3 = readRDS("fraser_salinity_16S_unfiltered.RDS")
ww3 = subset_samples(df3, as.double(salinity) >= 0)
### SET UP ###
{
## load packages
library(phyloseq)
library(tidyverse)
library(plyr)
library(ggplot2); theme_set(theme_bw()+
theme(panel.grid = element_blank(),
strip.background = element_rect(fill="white"),
axis.text.y = element_text(size = 12, colour = "black"),
axis.title = element_text(size=15, face="bold"),
strip.text = element_text(color="black", size=10),
legend.text=element_text(size=10),
axis.line = element_line(colour = "black"),
axis.text.x = element_blank(),))
## load function
dephyloseq = function(phylo_obj){
## get the metadata
meta = as.data.frame(as.matrix(phylo_obj@sam_data))
## how many metadata columns you have
metacols = ncol(meta)+1
## get out the otu table
## if your metadta is empty after running this, you need to use otu = as.data.frame(t(as.matrix(phylo_obj@otu_table)))
otu = as.data.frame(t(as.matrix(phylo_obj@otu_table)))
## merge the metadata and otu table by the rownames (sample ids from the Illumina sequencing data)
mo = merge(meta, otu, by=0)
## get out the taxonomy file
tax = as.data.frame(phylo_obj@tax_table)
## get the ASV ID out. This the matches the placeholder ASV ID in the OTU table
tax = tax %>% rownames_to_column(var="asv_id")
## pivot longer to be able to match the ASVs in the OTU table to the taxonomy table
mo = mo %>% pivot_longer(cols = -c(1:metacols), names_to = "asv_id", values_to="asv_abundance")
## Join the metadata and otu table with the taoxnomy table
mot = full_join(mo, tax)
## Specify the output for the dephyloseq funciton
output = mot
}
}
setwd("C:/Users/Alexander/OneDrive - The University Of British Columbia/BIOL 403/Clean Code/2. GetTopTaxa")
## read in the data
#change read_rds for other datasets
phyloseq = read_rds("fraser_20230320_salinity_ranges_filtered_not_rareified.RDS")
phyloseq = subset_taxa(phyloseq, genus != "NA")
## get the number of reads in each sample in your phyloseq object
phyloseq@sam_data$number_of_reads = sample_sums(phyloseq)
## subset the phyloseq object to only keep the samples you want
sample_names(phyloseq)
phyloseq = subset_samples(phyloseq)
## get the hu data out of phyloseq
## I always call this dataframe mot becayse it's the Metadata, OTU table, and Taxonomy, in that order
mot = dephyloseq(phyloseq)
